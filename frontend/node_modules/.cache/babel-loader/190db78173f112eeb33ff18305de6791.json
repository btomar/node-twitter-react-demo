{"ast":null,"code":"var _jsxFileName = \"/home/tomarb/twitter-node/slync-test-bhuvanesh-tomar/frontend/react-node-twitter-app/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Container } from 'semantic-ui-react';\nimport Header from './components/Header/Header';\nimport Tweet from './components/Tweet/Tweet';\nlet tweets = [];\n\nfunction App() {\n  const [data, setData] = useState({\n    tweets: []\n  });\n  let tweetCards = [];\n  let newTerm = 'bhtomar';\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios('https://hn.algolia.com/api/v1/search?query=redux');\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(async () => {\n    const fetchTweets = async () => {\n      const result = await axios.get('http://localhost:3001/api/v1/timeline?screen_name=bhtomar');\n      setData(result.data);\n      tweetCards = tweets.map(tweet => {\n        return /*#__PURE__*/React.createElement(Tweet, {\n          key: tweet.id,\n          tweet: tweet,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 16\n          }\n        });\n      });\n    };\n\n    fetchTweets();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Demo App using React, NodeJS and Twitter API\"))), \",\", /*#__PURE__*/React.createElement(Header, {\n    searchUserName: setData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, tweetCards));\n} // searchUserName = (newTerm) => {\n//   axios.get('http://localhost:3001/api/v1/timeline', null, { params: {\n//     user_name: newTerm\n//   } \n//   })\n//   .then(function (response) {\n//     console.log(response.data);\n//     let userTweets = response.data;\n//     this.setState({ tweets: userTweets });\n//   })\n//   .catch(function (error) {\n//     console.log(JSON.stringify(error));\n//   });\n// }\n// updateFilterTerm = (keyword) => {\n//   axios.get('http://localhost:3001/api/v1/statuses/filter', null, { params: {\n//     track: keyword\n//   } \n//   })\n//   .then(function (response) {\n//     let tweets = response.data;\n//     this.setState({ tweets });\n//   })\n//   .catch(function (error) {\n//     console.log(JSON.stringify(error));\n//   });\n// }\n// render() {\n//   let tweets = this.state.tweets.reverse()\n//   let tweetCards = tweets.map((tweet) => {\n//     return <Tweet key={tweet.id} tweet={tweet} />\n//   })\n//   return (\n//     <>\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <p>\n//           Demo App using React, NodeJS and Twitter API\n//         </p>\n//       </header>\n//     </div>,\n//     <Header searchUserName={this.searchUserName} updateFilterTerm={this.updateFilterTerm}/>\n//     <Container className=\"dashboard-container\">\n//       {tweetCards}\n//     </Container>\n//   </>\n//   );\n// }\n//}\n\n\nexport default App;","map":{"version":3,"sources":["/home/tomarb/twitter-node/slync-test-bhuvanesh-tomar/frontend/react-node-twitter-app/src/App.js"],"names":["React","useEffect","useState","axios","Container","Header","Tweet","tweets","App","data","setData","tweetCards","newTerm","fetchData","result","fetchTweets","get","map","tweet","id"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,IAAIC,MAAM,GAAG,EAAb;;AAEA,SAASC,GAAT,GAAgB;AACd,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAACK,IAAAA,MAAM,EAAE;AAAT,GAAD,CAA/B;AACA,MAAII,UAAU,GAAG,EAAjB;AACA,MAAIC,OAAO,GAAG,SAAd;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMX,KAAK,CACxB,kDADwB,CAA1B;AAIAO,MAAAA,OAAO,CAACI,MAAM,CAACL,IAAR,CAAP;AACD,KAND;;AAQAI,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAYAZ,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMc,WAAW,GAAG,YAAY;AAC9B,YAAMD,MAAM,GAAG,MAAMX,KAAK,CAACa,GAAN,CAAU,2DAAV,CAArB;AACAN,MAAAA,OAAO,CAACI,MAAM,CAACL,IAAR,CAAP;AACAE,MAAAA,UAAU,GAAGJ,MAAM,CAACU,GAAP,CAAYC,KAAD,IAAW;AACjC,4BAAO,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,UAAA,KAAK,EAAED,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFY,CAAb;AAGD,KAND;;AAOAH,IAAAA,WAAW;AAEV,GAVM,EAUJ,EAVI,CAAT;AAYA,sBACE,uDACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,CADF,CADA,oBAQA,oBAAC,MAAD;AAAQ,IAAA,cAAc,EAAEL,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,eASA,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,UADH,CATA,CADF;AAeD,C,CACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGF,eAAeH,GAAf","sourcesContent":["import React,{useEffect, useState}  from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Container } from 'semantic-ui-react';\nimport Header from './components/Header/Header';\nimport Tweet from './components/Tweet/Tweet';\nlet tweets = [];\n\nfunction App()  {\n  const[data, setData] = useState({tweets: []})\n  let tweetCards = [];\n  let newTerm = 'bhtomar'\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        'https://hn.algolia.com/api/v1/search?query=redux',\n      );\n \n      setData(result.data);\n    };\n \n    fetchData();\n  }, []);\n\n  useEffect(async () => {\n    const fetchTweets = async () => {\n      const result = await axios.get('http://localhost:3001/api/v1/timeline?screen_name=bhtomar',);\n      setData(result.data);\n      tweetCards = tweets.map((tweet) => {\n        return <Tweet key={tweet.id} tweet={tweet} />\n      });\n    };\n    fetchTweets();\n   \n    }, []);\n\n  return (\n    <>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Demo App using React, NodeJS and Twitter API\n        </p>\n      </header>\n    </div>,\n    <Header searchUserName={setData}/>\n    <Container className=\"dashboard-container\">\n      {tweetCards}\n    </Container>\n  </>\n  );\n}\n  // searchUserName = (newTerm) => {\n  //   axios.get('http://localhost:3001/api/v1/timeline', null, { params: {\n  //     user_name: newTerm\n  //   } \n  //   })\n  //   .then(function (response) {\n  //     console.log(response.data);\n  //     let userTweets = response.data;\n  //     this.setState({ tweets: userTweets });\n  //   })\n  //   .catch(function (error) {\n  //     console.log(JSON.stringify(error));\n  //   });\n  // }\n\n  // updateFilterTerm = (keyword) => {\n  //   axios.get('http://localhost:3001/api/v1/statuses/filter', null, { params: {\n  //     track: keyword\n  //   } \n  //   })\n  //   .then(function (response) {\n  //     let tweets = response.data;\n  //     this.setState({ tweets });\n  //   })\n  //   .catch(function (error) {\n  //     console.log(JSON.stringify(error));\n  //   });\n  // }\n\n  // render() {\n  //   let tweets = this.state.tweets.reverse()\n  //   let tweetCards = tweets.map((tweet) => {\n  //     return <Tweet key={tweet.id} tweet={tweet} />\n  //   })\n  //   return (\n  //     <>\n  //     <div className=\"App\">\n  //       <header className=\"App-header\">\n  //         <p>\n  //           Demo App using React, NodeJS and Twitter API\n  //         </p>\n  //       </header>\n  //     </div>,\n  //     <Header searchUserName={this.searchUserName} updateFilterTerm={this.updateFilterTerm}/>\n  //     <Container className=\"dashboard-container\">\n  //       {tweetCards}\n  //     </Container>\n  //   </>\n  //   );\n  // }\n\n  //}\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}