{"ast":null,"code":"const consumeTwitterApi = () => {\n  const [tweets, setTweets] = useState({\n    tweets: []\n  });\n  const [url, setUrl] = useState(`http://localhost:3001/api/v1/timeline?screen_name=bhtomar`);\n  const [search, setSearch] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchTweets = async () => {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        const result = await axios(url);\n        setTweets(result.data);\n      } catch (error) {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchTweets();\n  }, [url]);\n  return [{\n    data,\n    isLoading,\n    isError\n  }, setUrl];\n};","map":{"version":3,"sources":["/home/tomarb/twitter-node/slync-test-bhuvanesh-tomar/frontend/react-node-twitter-app/src/consumeTwitterApi.js"],"names":["consumeTwitterApi","tweets","setTweets","useState","url","setUrl","search","setSearch","isLoading","setIsLoading","useEffect","fetchTweets","setIsError","result","axios","data","error","isError"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,MAAM;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC;AAAEF,IAAAA,MAAM,EAAE;AAAV,GAAD,CAApC;AACA,QAAM,CAACG,GAAD,EAAMC,MAAN,IAAgBF,QAAQ,CAC3B,2DAD2B,CAA9B;AAGA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEAO,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,WAAW,GAAG,YAAY;AAC9BC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,UAAI;AACF,cAAMI,MAAM,GAAG,MAAMC,KAAK,CAACV,GAAD,CAA1B;AAEAF,QAAAA,SAAS,CAACW,MAAM,CAACE,IAAR,CAAT;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdJ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAEDH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAbD;;AAeAE,IAAAA,WAAW;AACZ,GAjBQ,EAiBN,CAACP,GAAD,CAjBM,CAAT;AAoBA,SAAO,CAAC;AAAEW,IAAAA,IAAF;AAAQP,IAAAA,SAAR;AAAmBS,IAAAA;AAAnB,GAAD,EAA+BZ,MAA/B,CAAP;AACD,CA7BD","sourcesContent":["const consumeTwitterApi = () => {\n  const [tweets, setTweets] = useState({ tweets: [] });\n  const [url, setUrl] = useState(\n    `http://localhost:3001/api/v1/timeline?screen_name=bhtomar`,\n  );\n  const [search, setSearch] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTweets = async () => {\n      setIsError(false);\n      setIsLoading(true);\n \n      try {\n        const result = await axios(url);\n \n        setTweets(result.data);\n      } catch (error) {\n        setIsError(true);\n      }\n \n      setIsLoading(false);\n    };\n \n    fetchTweets();\n  }, [url]);\n\n \n  return [{ data, isLoading, isError }, setUrl];\n}"]},"metadata":{},"sourceType":"module"}