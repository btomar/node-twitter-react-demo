{"ast":null,"code":"var _jsxFileName = \"/home/tomarb/twitter-node/slync-test-bhuvanesh-tomar/frontend/react-node-twitter-app/src/App.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport './App.css';\nimport { Button, Container, Input, Divider } from 'semantic-ui-react';\nimport Header from './components/Header/Header';\nimport Tweet from './components/Tweet/Tweet';\nimport useTwitterApi from './useTwitterApi';\n\nfunction App() {\n  const [query, setQuery] = useState('bhtomar');\n  const [search, setSearch] = useState('');\n  const [{\n    tweets,\n    isLoading,\n    isError\n  }, doFetch] = useTwitterApi();\n  var tweetCards = [];\n\n  function refreshTweets() {\n    tweetCards = tweets.map ? tweets.map(tweet => {\n      return /*#__PURE__*/React.createElement(Tweet, {\n        key: tweet.id,\n        tweet: tweet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      });\n    }) : [];\n  }\n\n  return [refreshTweets(), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Demo App using React, NodeJS and Twitter API\"))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      doFetch(`http://localhost:3001/api/v1/timeline?screen_name=${query}`);\n      event.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    focus: true,\n    id: \"searchInput\",\n    className: \"search-field\",\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    placeholder: \"View tweets by user\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: 'teal',\n    className: \"search-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(Container, {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    focus: true,\n    id: \"filterInput\",\n    className: \"search-field\",\n    placeholder: \"Filter tweets by...\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: 'teal',\n    className: \"search-field\",\n    fluid: true,\n    onClick: () => {\n      props.updateFilterTerm = document.getElementById('filterInput').value;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Filter Results\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  })), isError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \"Something went wrong ...\"), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Loading ...\") : /*#__PURE__*/React.createElement(Container, {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, tweetCards)))];\n} // searchUserName = (newTerm) => {\n//   axios.get('http://localhost:3001/api/v1/timeline', null, { params: {\n//     user_name: newTerm\n//   } \n//   })\n//   .then(function (response) {\n//     console.log(response.data);\n//     let userTweets = response.data;\n//     this.setState({ tweets: userTweets });\n//   })\n//   .catch(function (error) {\n//     console.log(JSON.stringify(error));\n//   });\n// }\n// updateFilterTerm = (keyword) => {\n//   axios.get('http://localhost:3001/api/v1/statuses/filter', null, { params: {\n//     track: keyword\n//   } \n//   })\n//   .then(function (response) {\n//     let tweets = response.data;\n//     this.setState({ tweets });\n//   })\n//   .catch(function (error) {\n//     console.log(JSON.stringify(error));\n//   });\n// }\n// render() {\n//   let tweets = this.state.tweets.reverse()\n//   let tweetCards = tweets.map((tweet) => {\n//     return <Tweet key={tweet.id} tweet={tweet} />\n//   })\n//   return (\n//     <>\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <p>\n//           Demo App using React, NodeJS and Twitter API\n//         </p>\n//       </header>\n//     </div>,\n//     <Header searchUserName={this.searchUserName} updateFilterTerm={this.updateFilterTerm}/>\n//     <Container className=\"dashboard-container\">\n//       {tweetCards}\n//     </Container>\n//   </>\n//   );\n// }\n//}\n\n\nexport default App;","map":{"version":3,"sources":["/home/tomarb/twitter-node/slync-test-bhuvanesh-tomar/frontend/react-node-twitter-app/src/App.js"],"names":["React","useEffect","useState","Fragment","Button","Container","Input","Divider","Header","Tweet","useTwitterApi","App","query","setQuery","search","setSearch","tweets","isLoading","isError","doFetch","tweetCards","refreshTweets","map","tweet","id","event","preventDefault","target","value","props","updateFilterTerm","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport './App.css';\nimport { Button, Container, Input, Divider } from 'semantic-ui-react'\nimport Header from './components/Header/Header';\nimport Tweet from './components/Tweet/Tweet';\nimport useTwitterApi from './useTwitterApi';\n\nfunction App() {\n  const [query, setQuery] = useState('bhtomar');\n  const [search, setSearch] = useState('');\n  const [{ tweets, isLoading, isError }, doFetch] = useTwitterApi();\n  var tweetCards = [];\n\n  function refreshTweets() {\n    tweetCards = tweets.map ? tweets.map((tweet) => {\n      return <Tweet key={tweet.id} tweet={tweet} />\n    }) : [];\n  }\n\n\n\n\n  return ([refreshTweets(),\n  <Fragment>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Demo App using React, NodeJS and Twitter API\n        </p>\n      </header>\n    </div>\n    <>\n    <div className='search-container'>\n      <form onSubmit={event => {\n        doFetch(`http://localhost:3001/api/v1/timeline?screen_name=${query}`);\n\n        event.preventDefault();\n      }}>\n        {/* <input\n          type=\"text\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <button type=\"submit\">Search</button> */}\n        \n      <Container className='header-container'>\n          <Input focus id='searchInput' className=\"search-field\" value={query} \n          onChange={event => setQuery(event.target.value)} placeholder='View tweets by user' fluid />\n          <Button color={'teal'} className=\"search-field\">Search</Button>\n      </Container>\n      </form>\n      <Container className='header-container'>\n          <Input focus id='filterInput' className=\"search-field\" placeholder='Filter tweets by...' fluid />\n          <Button color={'teal'} className=\"search-field\" fluid onClick={() => {\n            props.updateFilterTerm = document.getElementById('filterInput').value;\n          }}>Filter Results</Button>\n      </Container>\n      <Container>\n      {/* <Message >\n        <p>\n          You are viewing tweets containing <strong>\"{props.term}\"</strong> word in them.\n        </p>\n      </Message> */}\n      </Container>\n      <Divider />\n    </div>\n      \n      {isError && <div>Something went wrong ...</div>}\n      {isLoading ? (\n        <div>Loading ...</div>\n      ) : (\n          <Container className=\"dashboard-container\">\n            {tweetCards}\n          </Container>\n        )}\n    </>\n\n  </Fragment>\n  ]);\n}\n// searchUserName = (newTerm) => {\n//   axios.get('http://localhost:3001/api/v1/timeline', null, { params: {\n//     user_name: newTerm\n//   } \n//   })\n//   .then(function (response) {\n//     console.log(response.data);\n//     let userTweets = response.data;\n//     this.setState({ tweets: userTweets });\n//   })\n//   .catch(function (error) {\n//     console.log(JSON.stringify(error));\n//   });\n// }\n\n// updateFilterTerm = (keyword) => {\n//   axios.get('http://localhost:3001/api/v1/statuses/filter', null, { params: {\n//     track: keyword\n//   } \n//   })\n//   .then(function (response) {\n//     let tweets = response.data;\n//     this.setState({ tweets });\n//   })\n//   .catch(function (error) {\n//     console.log(JSON.stringify(error));\n//   });\n// }\n\n// render() {\n//   let tweets = this.state.tweets.reverse()\n//   let tweetCards = tweets.map((tweet) => {\n//     return <Tweet key={tweet.id} tweet={tweet} />\n//   })\n//   return (\n//     <>\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <p>\n//           Demo App using React, NodeJS and Twitter API\n//         </p>\n//       </header>\n//     </div>,\n//     <Header searchUserName={this.searchUserName} updateFilterTerm={this.updateFilterTerm}/>\n//     <Container className=\"dashboard-container\">\n//       {tweetCards}\n//     </Container>\n//   </>\n//   );\n// }\n\n//}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}