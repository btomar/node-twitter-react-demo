{"ast":null,"code":"var _jsxFileName = \"/home/tomarb/twitter-node/slync-test-bhuvanesh-tomar/frontend/react-node-twitter-app/src/App.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Container } from 'semantic-ui-react';\nimport Header from './components/Header/Header';\nimport Tweet from './components/Tweet/Tweet';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchUserName = newTerm => {\n      axios.get('http://localhost:3001/api/v1/timeline', null, {\n        params: {\n          user_name: newTerm\n        }\n      }).then(function (response) {\n        console.log(response.data);\n        let userTweets = response.data;\n        this.setState({\n          tweets: userTweets\n        });\n      }).catch(function (error) {\n        console.log(JSON.stringify(error));\n      });\n    };\n\n    this.updateFilterTerm = keyword => {\n      axios.get('http://localhost:3001/api/v1/statuses/filter', null, {\n        params: {\n          track: keyword\n        }\n      }).then(function (response) {\n        let tweets = response.data;\n        this.setState({\n          tweets\n        });\n      }).catch(function (error) {\n        console.log(JSON.stringify(error));\n      });\n    };\n\n    this.state = {\n      tweets: [],\n      term: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:3001/api/v1/tweets`).then(res => {\n      let tweets = res.data;\n      this.setState({\n        tweets\n      });\n    });\n  }\n\n  render() {\n    let tweets = this.state.tweets.reverse();\n    let tweetCards = tweets.map(tweet => {\n      return /*#__PURE__*/React.createElement(Tweet, {\n        key: tweet.id,\n        tweet: tweet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Demo App using React, NodeJS and Twitter API\"))), \",\", /*#__PURE__*/React.createElement(Header, {\n      searchUserName: this.searchUserName,\n      updateFilterTerm: this.updateFilterTerm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      className: \"dashboard-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, tweetCards));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tomarb/twitter-node/slync-test-bhuvanesh-tomar/frontend/react-node-twitter-app/src/App.js"],"names":["React","Component","useEffect","useState","axios","Container","Header","Tweet","App","constructor","props","searchUserName","newTerm","get","params","user_name","then","response","console","log","data","userTweets","setState","tweets","catch","error","JSON","stringify","updateFilterTerm","keyword","track","state","term","componentDidMount","res","render","reverse","tweetCards","map","tweet","id"],"mappings":"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","sourcesContent":["import React,{ Component, useEffect, useState}  from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Container } from 'semantic-ui-react';\nimport Header from './components/Header/Header';\nimport Tweet from './components/Tweet/Tweet';\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      tweets: [],\n      term: ''\n    }\n  }\n  componentDidMount() {\n    axios.get(`http://localhost:3001/api/v1/tweets`)\n      .then(res => {\n        let tweets = res.data;\n        this.setState({ tweets });\n      })\n  }\n\n  searchUserName = (newTerm) => {\n    axios.get('http://localhost:3001/api/v1/timeline', null, { params: {\n      user_name: newTerm\n    } \n    })\n    .then(function (response) {\n      console.log(response.data);\n      let userTweets = response.data;\n      this.setState({ tweets: userTweets });\n    })\n    .catch(function (error) {\n      console.log(JSON.stringify(error));\n    });\n  }\n\n  updateFilterTerm = (keyword) => {\n    axios.get('http://localhost:3001/api/v1/statuses/filter', null, { params: {\n      track: keyword\n    } \n    })\n    .then(function (response) {\n      let tweets = response.data;\n      this.setState({ tweets });\n    })\n    .catch(function (error) {\n      console.log(JSON.stringify(error));\n    });\n  }\n\n  render() {\n    let tweets = this.state.tweets.reverse()\n    let tweetCards = tweets.map((tweet) => {\n      return <Tweet key={tweet.id} tweet={tweet} />\n    })\n    return (\n      <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Demo App using React, NodeJS and Twitter API\n          </p>\n        </header>\n      </div>,\n      <Header searchUserName={this.searchUserName} updateFilterTerm={this.updateFilterTerm}/>\n      <Container className=\"dashboard-container\">\n        {tweetCards}\n      </Container>\n    </>\n    );\n  }\n\n  }\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}