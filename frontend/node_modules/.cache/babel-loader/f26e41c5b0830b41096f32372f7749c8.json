{"ast":null,"code":"var _jsxFileName = \"/home/tomarb/twitter-node/slync-test-bhuvanesh-tomar/frontend/react-node-twitter-app/src/App.js\";\nimport React, { useState, Fragment } from 'react';\nimport './App.css';\nimport { Button, Container, Input, Divider } from 'semantic-ui-react';\nimport Tweet from './components/Tweet/Tweet';\nimport useTwitterApi from './useTwitterApi';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [search, setSearch] = useState('');\n  const [{\n    tweets,\n    isLoading,\n    isError\n  }, doFetch] = useTwitterApi();\n  var tweetCards = [];\n\n  function refreshTweets() {\n    tweetCards = tweets.map ? tweets.map(tweet => {\n      return /*#__PURE__*/React.createElement(Tweet, {\n        key: tweet.id,\n        tweet: tweet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      });\n    }) : [];\n  }\n\n  function filterTweets() {\n    return tweets.filter ? tweets.filter(tweet => {\n      return tweet.includes ? tweet.includes(search) : '';\n    }) : [];\n  }\n\n  return [refreshTweets(), /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Demo App using React, NodeJS and Twitter API\"))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      doFetch(`http://localhost:3001/api/v1/timeline?screen_name=${query}`);\n      event.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    focus: true,\n    id: \"searchInput\",\n    className: \"search-field\",\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    placeholder: \"View tweets by user\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: 'teal',\n    className: \"search-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(Container, {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    focus: true,\n    id: \"filterInput\",\n    className: \"search-field\",\n    value: search,\n    onChange: event => setSearch(event.target.value),\n    placeholder: \"Filter tweets by...\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: 'teal',\n    onClick: filterTweets(),\n    className: \"search-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Filter Results\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })), isError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"Something went wrong ...\"), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Loading ...\") : /*#__PURE__*/React.createElement(Container, {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, tweetCards)))];\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tomarb/twitter-node/slync-test-bhuvanesh-tomar/frontend/react-node-twitter-app/src/App.js"],"names":["React","useState","Fragment","Button","Container","Input","Divider","Tweet","useTwitterApi","App","query","setQuery","search","setSearch","tweets","isLoading","isError","doFetch","tweetCards","refreshTweets","map","tweet","id","filterTweets","filter","includes","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState, Fragment } from 'react';\nimport './App.css';\nimport { Button, Container, Input, Divider } from 'semantic-ui-react'\nimport Tweet from './components/Tweet/Tweet';\nimport useTwitterApi from './useTwitterApi';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [search, setSearch] = useState('');\n  const [{ tweets, isLoading, isError }, doFetch] = useTwitterApi();\n  var tweetCards = [];\n\n  function refreshTweets() {\n    tweetCards = tweets.map ? tweets.map((tweet) => {\n      return <Tweet key={tweet.id} tweet={tweet} />\n    }) : [];\n  }\n\n  function filterTweets() {\n    return tweets.filter?tweets.filter((tweet) => { return tweet.includes?tweet.includes(search):''}):[];\n  }\n\n\n\n\n  return ([refreshTweets(),\n  <Fragment>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Demo App using React, NodeJS and Twitter API\n        </p>\n      </header>\n    </div>\n    <>\n    <div className='search-container'>\n      <form onSubmit={event => {\n        doFetch(`http://localhost:3001/api/v1/timeline?screen_name=${query}`);\n\n        event.preventDefault();\n      }}>\n        \n      <Container className='header-container'>\n          <Input focus id='searchInput' className=\"search-field\" value={query} \n          onChange={event => setQuery(event.target.value)} placeholder='View tweets by user' fluid />\n          <Button color={'teal'} className=\"search-field\">Search</Button>\n      </Container>\n      </form>\n      <Container className='header-container'>\n          <Input focus id='filterInput' className=\"search-field\" value={search} \n          onChange={event => setSearch(event.target.value)} placeholder='Filter tweets by...' fluid />\n          <Button color={'teal'} onClick={filterTweets()} className=\"search-field\" >Filter Results</Button>\n      </Container>\n   \n      <Divider />\n    </div>\n      \n      {isError && <div>Something went wrong ...</div>}\n      {isLoading ? (\n        <div>Loading ...</div>\n      ) : (\n          <Container className=\"dashboard-container\">\n            {tweetCards}\n          </Container>\n        )}\n    </>\n\n  </Fragment>\n  ]);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}